{*
Example for Accel6 Click

    Date          : maj 2018.
    Author        : Katarina Perendic

Test configuration STM32 :
    
    MCU              : STM32F107VCT6
    Dev. Board       : EasyMx PRO v7 for STM32
    ARM Compiler ver : v6.0.0.0

---

Description :

The application is composed of three sections :

- System Initialization - Initializes I2C module
- Application Initialization - Initializes Driver init and settings accelerometer data range, 
                               bandwidth, mode and sleep timer which are necessary for the init chip.
- Application Task - (code snippet) - Reads the accel X / Y / Z axis data in mg, 
                                      Temperature data in C, detects the orientation of the X,Y and Z axis
                                      and checking on which axis the tap is detected.
                                      All data logs on usb uart for every 500 ms.

*}
program Click_Accel6_STM;

uses Click_Accel6_types, Click_Accel6_config;

var
    tap_detect : uint8_t; 
    orient : uint8_t; 
    z_orient : array[1] of uint8_t; 
    xy_orient : array[1] of uint8_t; 
    fAxis : real; 
    Temp : real; 
    demoText : array[50] of char; 
    
procedure systemInit(); 
begin

    mikrobus_i2cInit(_MIKROBUS1, @_ACCEL6_I2C_CFG[0]); 
    mikrobus_logInit(_LOG_USBUART_A, 9600); 
    mikrobus_logWrite(' --- System init --- ', _LOG_LINE); 
    Delay_ms(100); 

end;

procedure applicationInit(); 
begin

    accel6_i2cDriverInit(T_ACCEL6_P(@_MIKROBUS1_GPIO), T_ACCEL6_P(@_MIKROBUS1_I2C), 0x18); 
    accel6_softReset(); 
    accel6_init(_ACCEL6_PMU_RANGE_4g, _ACCEL6_PMU_BW_125Hz, (_ACCEL6_PMU_LPW_NORMAL_MODE or _ACCEL6_PMU_LPW_SLEEP_10ms)); 
    Delay_100ms(); 

end;

procedure applicationTask(); 
begin

    mikrobus_logWrite(' X axis :  ', _LOG_TEXT); 
    fAxis := accel6_getAxis(_ACCEL6_AXIS_X); 
    FloatToStr(fAxis, demoText); 
    mikrobus_logWrite(demoText, _LOG_TEXT); 
    mikrobus_logWrite(' mg ', _LOG_LINE); 
    mikrobus_logWrite(' Y axis :  ', _LOG_TEXT); 
    fAxis := accel6_getAxis(_ACCEL6_AXIS_Y); 
    FloatToStr(fAxis, demoText); 
    mikrobus_logWrite(demoText, _LOG_TEXT); 
    mikrobus_logWrite(' mg ', _LOG_LINE); 
    mikrobus_logWrite(' Z axis :  ', _LOG_TEXT); 
    fAxis := accel6_getAxis(_ACCEL6_AXIS_Y); 
    FloatToStr(fAxis, demoText); 
    mikrobus_logWrite(demoText, _LOG_TEXT); 
    mikrobus_logWrite(' mg ', _LOG_LINE); 
    mikrobus_logWrite(' Temperature :  ', _LOG_TEXT); 
    Temp := accel6_getTemperature(); 
    FloatToStr(Temp, demoText); 
    mikrobus_logWrite(demoText, _LOG_TEXT); 
    mikrobus_logWrite(' C ', _LOG_LINE); 
    accel6_getOrient(@z_orient[0], @xy_orient[0]); 
    case z_orient[0] of
        1 :
        begin
            mikrobus_logWrite(' Z orient : UPWARD looking ', _LOG_LINE); 
        end;
        2 :
        begin
            mikrobus_logWrite(' Z orient : DOWNWARD looking ', _LOG_LINE); 
        end
        else
        begin
        end;
    end;
    case xy_orient[0] of
        1 :
        begin
            mikrobus_logWrite(' XY orient : UPSIDE DOWN ', _LOG_LINE); 
        end;
        2 :
        begin
            mikrobus_logWrite(' XY orient : LANDSCAPE LEFT ', _LOG_LINE); 
        end;
        3 :
        begin
            mikrobus_logWrite(' XY orient : LANDSCAPE RIGHT ', _LOG_LINE); 
        end;
        4 :
        begin
            mikrobus_logWrite(' XY orient : UPRIGHT ', _LOG_LINE); 
        end
        else
        begin
        end;
    end;
	
	tap_detect := accel6_getTapStatus(); 
    case tap_detect of
        1 :
        begin
            mikrobus_logWrite(' Tap status : X negative ', _LOG_LINE); 
        end;
        2 :
        begin
            mikrobus_logWrite(' Tap status : Y negative ', _LOG_LINE); 
        end;
        3 :
        begin
            mikrobus_logWrite(' Tap status : Z negative ', _LOG_LINE); 
        end;
        4 :
        begin
            mikrobus_logWrite(' Tap status : X positive ', _LOG_LINE); 
        end;
        5 :
        begin
            mikrobus_logWrite(' Tap status : Y positive ', _LOG_LINE); 
        end;
        6 :
        begin
            mikrobus_logWrite(' Tap status : Z positive ', _LOG_LINE); 
        end
        else
        begin
        end;
    end;
	
    mikrobus_logWrite('  ', _LOG_LINE); 
    Delay_ms(500); 

end;

begin
    z_orient[0] := 0;
    xy_orient[0] := 0;
    fAxis := 0.0;
    Temp := 0.0;
    demoText[0] := 0;

    systemInit(); 
    applicationInit(); 
    while (1) do 
    begin 
        applicationTask(); 
    end;

end.